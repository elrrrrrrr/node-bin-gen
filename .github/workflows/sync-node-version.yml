name: Sync Node Version

on:
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 时间 00:00 运行
  push:
    branches:
      - bot

jobs:
  sync-node-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Fetch the latest Node.js versions
        id: fetch-node
        run: |
          echo "::set-output name=version::$(curl -s https://nodejs.org/dist/index.json | jq -r '[.[] | select(.date > "'$(date --date='5 day ago' +%Y-%m-%d)'T00:00:00Z")][0].version')"

      - name: Check if version is published on npm
        id: check-npm
        run: |
          VERSION=${{ steps.fetch-node.outputs.version }}
          if [ -z "$VERSION" ]; then
            echo "No new versions in the last day."
            echo "::set-output name=published::true"
          else
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://registry.npmjs.com/node/$VERSION)
            if [ "$RESPONSE" -eq 200 ]; then
              echo "$VERSION is already published on npm."
              echo "::set-output name=published::true"
            else
              echo "$VERSION is not published on npm."
              echo "::set-output name=published::false"
            fi
          fi

      - name: Run custom script for unpublished versions
        if: steps.check-npm.outputs.published == 'false'
        run: |
          # 创建 target 目录并进入
          mkdir target && cd target

          # 在 target 目录下执行你的脚本，假设它会在这里生成子目录
          node ../index.js ${{ steps.fetch-node.outputs.version }}

          # 对每个生成的子目录执行 npm publish
          for dir in */ ; do
            cd "$dir" && npm publish --dry-run && cd ..
          done
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
